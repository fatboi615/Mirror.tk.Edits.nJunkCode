#pragma once
#include "../../stdafx.h"

enum MenuTabs
{
	
    Tab_Legitbot = 0,
	Tab_Ragebot,
	Tab_Visuals,
	Tab_Misc,
	Tab_Colors,
	Tab_Skinchanger,
	Tab_Legitbot1,
	MAXVALUEMENU
	
	
};

enum Config
{
	Config_save,
	Config_load,
	Config_type,
};



enum RagebotTab
{
	Ragebot_AimbotEnabled,
	Ragebot_FLagsFix,
	Ragebot_Selection,
	Ragebot_Hitbox,
	Ragebot_Resolver180,
	BAIMONEKEY,
	Ragebot_Multipoint,
	AntiAim_FakeWalk,
	AntiAim_FakeWalkButton,
	Ragebot_HeadHit,
	Ragebot_NeckHit,
	Ragebot_HitNeckFull,
	Ragebot_Body,
	Ragebot_BodyFull,
	Ragebot_ArmsFull,
	Ragebot_Arms,
	Ragebot_Legs,
	Ragebot_LegsFull,
	Ragebot_ResolverY,
	Ragebot_PS,
	Ragebot_HitHead,
	Ragebot_HitNeck,
	Ragebot_HitLowerNeck,
	Ragebot_HitUpperChest,
	Ragebot_HitLowerChest,
	Ragebot_HitPelvis,
	Ragebot_HitStomach,
	Ragebot_HitRightThigh,
	Ragebot_HitLeftThigh,
	resolver228,
	Ragebot_HitLShin,
	Ragebot_HitRShin,
	Ragebot_HitLfoot,
	Ragebot_HitRfoot,
	Ragebot_HitLeftUpperArm,
	Ragebot_HitLowerArm,
	Ragebot_HitUpperArm,
	//	Ragebot_HitLowerArm,
	Ragebot_HitLhand,
	Ragebot_HitRhand,
	Ragebot_HitChest,
	//	Ragebot_HitPelvis,
	//	Ragebot_HitStomach,
	Ragebot_HitLegs,
	Ragebot_HitArms,
	LBY_Resolver,
	Ragebot_LagFix,
	PithResolver,
	Visuals_ThirdPerson1,
	Ragebot_Multibox,
	Ragebot_Velocity,
	Ragebot_AutoShoot,
	Ragebot_pSilent,
	Ragebot_Autoscope,
	Ragebot_SilentAim,
	Ragebot_Hitchance,
	Ragebot_MinDamage,
	Ragebot_AcceptKill,
	Ragebot_180,
	Ragebot_1801,
	Memewalk,
	Resolver21,
	Ragebot_ResolverY21,
	AA_YawOffsetFake,
	Top180,
	AA_PitchStand,
	AA_PitchMove,
	AA_YawStand,
	AA_YawMove,
	AA_YawOffsetReal,
	AA_bind,
	AA_YawJitterFake,
	AA_YawJitterReal,
	AA_FakeYawStand,
	AA_FakeYawMove,
	AA_FakePitchStand,
	AA_FakePitchMove,
	AA_WallDetection,
	AA_VelocitySwitch,
	AntiAim_Yaw,	
	Ragebot_Resolver,
	Ragebot_Accuracy,
	Ragebot_PreferBodyAim,
	Ragebot_PositionAdjustment,
	Ragebot_GOTV,
	Ragebot_MultipointType,
	Rage_Switch,
	MAXVALUERAGE
};

enum Visualstab
{
	Visuals_Enable,
	Visuals_BoxEnabled,
	Visuals_BoxType,
	hitmark1,
	Misc_HJitter,
	Misc_Watermark,
	Visuals_hitsmart,
	Visuals_Scoped,
	Changer_World,
	Changer_Worldon,
	Changer_NoSky,
	Visuals_SkyE,
	Visuals_Sky,
	Visuals_Dlight,
	Visuals_EspTeam,
	Visuals_HealthBar,
	Visuals_ArmorBar,
	Visuals_Name,
	Visuals_Flashed,
	Visuals_Weapons,
	Visuals_AimLines,
	Visuals_Skeltal,
	Visuals_EngineRadar,
	Visuals_Hostage,
	Visuals_DroppedWeapons,
	Visuals_NoRecoil,
	Visuals_NoFlash,
	Visuals_NoSmoke,
	Visuals_ThirdPerson2,
	Visuals_ThirdPerson,
	Visuals_Freecam,
	Visuals_Freecam2,
	Visual_TPRange,
	Visuals_BoxEnabled1,
	Visuals_NoScope,
	Watermark_info,
	Visuals_Chams,
	Visuals_ChamsXQZ,
	Visuals_ChamsTeam,
	Cross_Index,
	Visuals_Night,
	Visuals_LBY,
	SniperCrosshair,
	Visuals_ThirdPersonButton,
	Visuals_Colors_WorldR,
	Visuals_Colors_WorldG,
	Visuals_Colors_WorldB,
	Visuals_ChamsGuns,
	Misc_WireHands,
	Visuals_XQZ,
	Misc_EnableFOV,
	Misc_ChamHands,
	Visuals_Crosshair,
	Misc_FovValue,
	Misc_Weapon,
	SpecList,
	Misc_noWeapon,
	Misc_DrawMonitor,
	Visuals_CrosshairDynamic,
	Visuals_EnableFOV,
	Visuals_watermark,
	Visuals_FovValue,
	Visuals_C4,
	Visuals_Flags,
	Visuals_MethyHands,
	Visuals_Dlights,
	Visuals_fov,
	MAXVALUEVISUALS
};

enum MiscTab
{
	Colors_WorldR,
	Colors_WorldG,
	Colors_WorldB,
	Misc_WhichWeapon,
	Misc_AntiUntrusted,
	Misc_aironle,
	Misc_AutoJump,
	Misc_AutoStrafe,
	VIS_LBY,
	Misc_AutoStraferMode,
	Misc_ClanTagSpammer,
	Misc_Radar,
	EnableNameSpam,
	knife,
	Misc_X,
	EnableChatSpam,
	Misc_FakeLag,
	Misc_ClanTagAnimate,
	Misc_FakeLagAmount,
	ChatSpamMessage,
	Misc_Airstuck_Enabled,
	bhop,
	starafe,
	Misc_MethyHands,
	Other_Misc_Hands_Red,
	Other_Misc_Hands_Green,
	Other_Misc_Hands_Blue,
	Other_Misc_Hands_Alpha,
	Other_Misc_Wire_Red,
	Other_Misc_Wire_Green,
	Other_Misc_Wire_Blue,
	Other_Misc_Wire_Alpha,
	Misc_Airstuck_Key,
	NemeSpam,
	Misc_Bypass,
	Misc_AutoAccept,
	Misc_KnifeBot,
//	Misc_DrawMonitor,
	Misc_ClanTagSelection,
	Misc_ZStrafe,
	Misc_NameStealer,
	Misc_NameStealer_Index,
	Misc_NameStealer_Invis,
	Misc_Clan_Active,
	Misc_Clan_Index,
	Misc_Spam_Index,
	Misc_Spam_Active,
	Misc_Spam_Speed,
	Misc_PostProcessing,
	Misc_CircleStrafe_Enabled,
	Misc_CircleStrafe_Key,
	Misc_CircleStrafe_Mode,
	Other_Cham_Weapon_Red,
	Other_Cham_Weapon_Green,
	Other_Cham_Weapon_Blue,
	Other_Cham_Weapon_Alpha,
	Misc_ZStrafeKey,
	Misc_CircleStrafe,
	Misc_CircleStrafeKey,
	Misc_WeaponConfigs,

	
	MAXVALUEMISC
};

enum Skins
{
	SkinsEnable,
	AK47,
	AWP,
	SSG08,
	SCAR20,
	G3SG1,
	M4A1,
	M4A1S,
	USP,
	P2000,
	MAC10,
	MP9,
	UMP45,
	P90,
	BIZON,
	AUG,
	SG553,
	Knifell,
	MP7,
	P250,
	Glock18c,
	Stattrak,
	StattrakVal,
	DUALB,
	FAMAS,
	Galil,
	Deagle,
	FiveSeven,
	Tec9,
	CZ75,
	KnifeSkin,
	Glove,
	SkinsGroup,

	GloveSkin,
	GloveSkin1,
	GloveSkin2,
	GloveSkin3,
	GloveSkin4,
	GloveSkin5,
	GloveModel,
	MAXVALUESKINS
};

enum LegitbotTab
{
	Legitbot_enable,
	Legitbot_Fov,
	Legitbot_Aimonkey,
	Legitbot_fov,
	Legitbot_Fov1,
	Legitbot_fovtype,
	Legitbot_smooth,
	Legitbot_SmokeCheck,
	Legitbot_Psilent,
	Legitbot_smoothtype,
	Legitbot_smoothX,
	Legitbot_smoothY,
	Legitbot_multihitbox,
	Legitbot_hitbox,
	Legitbot_rcs,
	Legitbot_visFov,
	Legitbot_rcsforceX,
	Legitbot_rcsforceY,
	Legitbot_Aimbotkey,
	Legitbot_Smokecheck,
	Legitbot_Firedelay,
	Legitbot_Pskey,
	Legitbot_PS,
	Legitbot_PSfov,
	Legitbot_Prcsforce,
	Legitbot_FlashCheck,
	Legitbot_FlashCheckDuration,
	Legitbot_JumpCheck,
	MAXVALUELEGIT
};

enum colors
{
	TextR,
	TextG,
	TextB,
	ChamsR,
	ChamsG,
	ChamsB,
	ChamsRCT,
	ChamsGCT,
	ChamsBCT,
	ChamsRT,
	ChamsGT,
	ChamsBT,
	ChamsRCTIN,
	ChamsGCTIN,
	ChamsBCTIN,
	ChamsRTIN,
	ChamsGTIN,
	ChamsBTIN,
	MenuStyleR,
	MenuStyleG,
	MenuStyleB,
	MenuStyleR2,
	MenuStyleG2,
	MenuStyleB2,
	MenuStyleRt2,
	MenuStyleGt2,
	MenuStyleBt2,
	MenuStyleRt,
	MenuStyleGt,
	MenuStyleBt,
	Colors_chams_visible_r,
	Colors_chams_visible_g,
	Colors_chams_visible_b,
	Colors_chams_visible_a,
	Colors_chams_invisible_r,
	Colors_chams_invisible_g,
	Colors_chams_invisible_b,
	Colors_chams_invisible_a,
	Colors_controls_text_r,
	Colors_controls_text_g,
	Colors_controls_text_b,
	Colors_controls_text_a,
	Colors_controls_background_r,
	Colors_controls_background_g,
	Colors_controls_background_b,
	Colors_controls_background_a,
	Colors_background_r,
	Colors_background_g,
	Colors_background_b,
	Colors_background_a,
	Colors_outline_r,
	Colors_outline_g,
	Colors_outline_b,
	Colors_outline_a,
	Colors_sliders_r,
	Colors_sliders_g,
	Colors_sliders_b,
	Colors_sliders_a,
	Colors_sliders_back_r,
	Colors_sliders_back_g,
	Colors_sliders_back_b,
	Colors_sliders_back_a,
	Colors_menutitle_r,
	Colors_menutitle_g,
	Colors_menutitle_b,
	Colors_menutitle_a,
	Colors_menutab_r,
	Colors_menutab_g,
	Colors_menutab_b,
	Colors_menutab_a,
	MAXVALUECOLORS
};

enum weapongroups
{
	Group_Default = 0,
	Group_Rifle,
	Group_Pistol,
	Group_DEAGLE,
	Group_BERETTA,
	Group_BUSPS,
	Group_CZ75,
	Group_revolver,
	Group_Shotgun,
	Group_SMG,
	Group_Heavy,
	Group_AWP,
	Group_Scout,
	Group_Othersnipers,
	MAXVALUEWEAPONGROUPS
};



class SettingsManger
{
public:
	bool weaponconfigs();

	static void SetSetting(int Tab, int Setting, double Value);

	void SetSetting6(int Tab, int Setting, double Value);

	double GetSetting6(int Tab, int Setting);

	double GetSettingLegit(int Tab, int Setting);

	static void SetSetting2(int Setting, double Value);

	static double GetSetting(int Tab, int Setting);



	double GetPlayer(int index, int Tab, int Setting);



	static double GetMenuSetting(int Tab, int Setting);

	static double GetMenuSetting2(int Setting);

};

extern SettingsManger Settings;
